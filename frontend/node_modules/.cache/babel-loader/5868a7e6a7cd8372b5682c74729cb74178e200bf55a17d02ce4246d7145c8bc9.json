{"ast":null,"code":"import React,{useState,useRef}from'react';import Webcam from'react-webcam';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function FaceDetector(_ref){let{onBack}=_ref;const[isScanning,setIsScanning]=useState(false);const[capturedImage,setCapturedImage]=useState(null);const webcamRef=useRef(null);const captureImage=()=>{const imageSrc=webcamRef.current.getScreenshot();if(imageSrc){setCapturedImage(imageSrc);return imageSrc;}else{alert('Failed to capture image. Please ensure the camera is accessible.');return null;}};const handleFaceRecognition=async()=>{setIsScanning(true);try{// Clear session before starting new face recognition\nawait fetch('http://localhost:5000/api/clear-session',{method:'POST',headers:{'Content-Type':'application/json'}});// Capture image from webcam\nconst imageSrc=captureImage();if(!imageSrc){setIsScanning(false);return;}// Send the captured image to the backend for face recognition\nconst response=await fetch('http://localhost:5000/api/recognize-face',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({image:imageSrc})});const recognitionData=await response.json();if(recognitionData.status!==200){if(recognitionData.message.includes('No faces detected')){alert('No faces detected. Please ensure your face is visible and well-lit.');}else if(recognitionData.message.includes('not trained')){alert('Face recognition model is not trained. Please train the model first.');}else{alert(recognitionData.message||'Face recognition failed.');}setIsScanning(false);return;}const studentId=recognitionData.student_id;if(!studentId){alert('No face recognized.');setIsScanning(false);return;}// Mark attendance with the recognized student_id\nconst attendanceResponse=await fetch('http://localhost:5000/api/mark-attendance',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({student_id:studentId})});const attendanceData=await attendanceResponse.json();alert(attendanceData.message);if(attendanceData.status===200&&attendanceData.student){const{id,name,roll,department}=attendanceData.student;alert(`Recognized Student:\\nID: ${id}\\nName: ${name}\\nRoll: ${roll}\\nDepartment: ${department}`);}}catch(error){console.error('Error during face recognition:',error);alert('Failed to perform face recognition. Please ensure your camera is working and check the console for details.');}finally{setTimeout(()=>setIsScanning(false),2000);}};const handleTrainModel=async()=>{try{const response=await fetch('http://localhost:5000/api/train',{method:'POST',headers:{'Content-Type':'application/json'}});const data=await response.json();alert(data.message);}catch(error){console.error('Error training model:',error);alert('Failed to train model. Please check the console for details.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen relative overflow-hidden\",style:{backgroundImage:'url(/images/bb.jpg)',backgroundSize:'cover',backgroundPosition:'center',backgroundRepeat:'no-repeat'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-black bg-opacity-70\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 overflow-hidden pointer-events-none\",children:[...Array(20)].map((_,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"particle\",style:{left:`${Math.random()*100}%`,top:`${Math.random()*100}%`,animationDelay:`${Math.random()*5}s`}},i))}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative z-10\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-blue-900 to-purple-900 text-white p-4 flex justify-between items-center rounded-b-2xl shadow-lg\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:onBack,className:\"flex items-center bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 hover:scale-105 transition-all shadow-md\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5 mr-2\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M15 19l-7-7 7-7\"})}),\"Back Home\"]}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold font-['Montserrat',_sans-serif] tracking-wide text-transparent bg-clip-text bg-gradient-to-r from-blue-300 to-purple-300\",children:\"Welcome to Face Recognition Panel\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-12 h-12\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"relative flex justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-64 h-1 bg-gradient-to-r from-blue-500 to-purple-500 rounded animate-pulse mt-2\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center min-h-[calc(100vh-120px)] px-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative w-64 h-64 mb-6\",children:[!capturedImage?/*#__PURE__*/_jsx(Webcam,{audio:false,ref:webcamRef,screenshotFormat:\"image/jpeg\",width:256,height:256,videoConstraints:{facingMode:'user'},className:\"w-full h-full object-cover rounded-2xl border-4 border-transparent hover:border-blue-500 transition-all duration-300 shadow-lg\"}):/*#__PURE__*/_jsx(\"img\",{src:capturedImage,alt:\"Captured Face\",className:\"w-full h-full object-cover rounded-2xl border-4 border-blue-500 shadow-lg\"}),isScanning&&!capturedImage&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"scan-line\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 rounded-2xl shadow-[0_0_20px_rgba(59,130,246,0.5)] opacity-0 hover:opacity-100 transition-opacity duration-300 pointer-events-none\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleFaceRecognition,className:\"relative w-64 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-bold py-3 rounded-xl hover:scale-105 hover:shadow-xl transition-all duration-300 shadow-md flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"w-6 h-6 mr-2\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M3 12h18M3 6h18M3 18h18M9 6v12M15 6v12\"})}),\"Face Detector\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleTrainModel,className:\"relative w-64 bg-gradient-to-r from-green-600 to-teal-600 text-white font-bold py-3 rounded-xl hover:scale-105 hover:shadow-xl transition-all duration-300 shadow-md flex items-center justify-center mt-4\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"w-6 h-6 mr-2\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"})}),\"Train Model\"]})]})})]}),/*#__PURE__*/_jsx(\"style\",{children:`\n          @keyframes float {\n            0%, 100% { transform: translateY(0); }\n            50% { transform: translateY(-10px); }\n          }\n          @keyframes scan {\n            0% { transform: translateY(-100%); }\n            100% { transform: translateY(100%); }\n          }\n          .particle {\n            position: absolute;\n            width: 4px;\n            height: 4px;\n            background: rgba(59, 130, 246, 0.7);\n            border-radius: 50%;\n            animation: float 5s infinite ease-in-out;\n            box-shadow: 0 0 10px rgba(59, 130, 246, 0.5);\n          }\n          .scan-line {\n            position: absolute;\n            width: 100%;\n            height: 2px;\n            background: linear-gradient(to right, transparent, #3b82f6, transparent);\n            animation: scan 1s infinite linear;\n          }\n        `})]});}export default FaceDetector;","map":{"version":3,"names":["React","useState","useRef","Webcam","jsx","_jsx","jsxs","_jsxs","FaceDetector","_ref","onBack","isScanning","setIsScanning","capturedImage","setCapturedImage","webcamRef","captureImage","imageSrc","current","getScreenshot","alert","handleFaceRecognition","fetch","method","headers","response","body","JSON","stringify","image","recognitionData","json","status","message","includes","studentId","student_id","attendanceResponse","attendanceData","student","id","name","roll","department","error","console","setTimeout","handleTrainModel","data","className","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","children","Array","map","_","i","left","Math","random","top","animationDelay","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","audio","ref","screenshotFormat","width","height","videoConstraints","facingMode","src","alt"],"sources":["C:/Users/anshu/attendance-management-system/frontend/src/components/FaceDetector.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Webcam from 'react-webcam';\r\n\r\nfunction FaceDetector({ onBack }) {\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const [capturedImage, setCapturedImage] = useState(null);\r\n  const webcamRef = useRef(null);\r\n\r\n  const captureImage = () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    if (imageSrc) {\r\n      setCapturedImage(imageSrc);\r\n      return imageSrc;\r\n    } else {\r\n      alert('Failed to capture image. Please ensure the camera is accessible.');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleFaceRecognition = async () => {\r\n    setIsScanning(true);\r\n    try {\r\n      // Clear session before starting new face recognition\r\n      await fetch('http://localhost:5000/api/clear-session', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n\r\n      // Capture image from webcam\r\n      const imageSrc = captureImage();\r\n      if (!imageSrc) {\r\n        setIsScanning(false);\r\n        return;\r\n      }\r\n\r\n      // Send the captured image to the backend for face recognition\r\n      const response = await fetch('http://localhost:5000/api/recognize-face', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ image: imageSrc }),\r\n      });\r\n      const recognitionData = await response.json();\r\n\r\n      if (recognitionData.status !== 200) {\r\n        if (recognitionData.message.includes('No faces detected')) {\r\n          alert('No faces detected. Please ensure your face is visible and well-lit.');\r\n        } else if (recognitionData.message.includes('not trained')) {\r\n          alert('Face recognition model is not trained. Please train the model first.');\r\n        } else {\r\n          alert(recognitionData.message || 'Face recognition failed.');\r\n        }\r\n        setIsScanning(false);\r\n        return;\r\n      }\r\n\r\n      const studentId = recognitionData.student_id;\r\n      if (!studentId) {\r\n        alert('No face recognized.');\r\n        setIsScanning(false);\r\n        return;\r\n      }\r\n\r\n      // Mark attendance with the recognized student_id\r\n      const attendanceResponse = await fetch('http://localhost:5000/api/mark-attendance', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ student_id: studentId }),\r\n      });\r\n      const attendanceData = await attendanceResponse.json();\r\n      alert(attendanceData.message);\r\n\r\n      if (attendanceData.status === 200 && attendanceData.student) {\r\n        const { id, name, roll, department } = attendanceData.student;\r\n        alert(`Recognized Student:\\nID: ${id}\\nName: ${name}\\nRoll: ${roll}\\nDepartment: ${department}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during face recognition:', error);\r\n      alert('Failed to perform face recognition. Please ensure your camera is working and check the console for details.');\r\n    } finally {\r\n      setTimeout(() => setIsScanning(false), 2000);\r\n    }\r\n  };\r\n\r\n  const handleTrainModel = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/train', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      const data = await response.json();\r\n      alert(data.message);\r\n    } catch (error) {\r\n      console.error('Error training model:', error);\r\n      alert('Failed to train model. Please check the console for details.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"min-h-screen relative overflow-hidden\"\r\n      style={{\r\n        backgroundImage: 'url(/images/bb.jpg)',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n      }}\r\n    >\r\n      <div className=\"absolute inset-0 bg-black bg-opacity-70\"></div>\r\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\r\n        {[...Array(20)].map((_, i) => (\r\n          <div\r\n            key={i}\r\n            className=\"particle\"\r\n            style={{\r\n              left: `${Math.random() * 100}%`,\r\n              top: `${Math.random() * 100}%`,\r\n              animationDelay: `${Math.random() * 5}s`,\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      <div className=\"relative z-10\">\r\n        <div className=\"bg-gradient-to-r from-blue-900 to-purple-900 text-white p-4 flex justify-between items-center rounded-b-2xl shadow-lg\">\r\n          <button onClick={onBack} className=\"flex items-center bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 hover:scale-105 transition-all shadow-md\">\r\n            <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\"></path>\r\n            </svg>\r\n            Back Home\r\n          </button>\r\n          <h1 className=\"text-3xl font-bold font-['Montserrat',_sans-serif] tracking-wide text-transparent bg-clip-text bg-gradient-to-r from-blue-300 to-purple-300\">\r\n            Welcome to Face Recognition Panel\r\n          </h1>\r\n          <div className=\"w-12 h-12\"></div>\r\n        </div>\r\n        <div className=\"relative flex justify-center\">\r\n          <div className=\"w-64 h-1 bg-gradient-to-r from-blue-500 to-purple-500 rounded animate-pulse mt-2\"></div>\r\n        </div>\r\n        <div className=\"flex justify-center items-center min-h-[calc(100vh-120px)] px-4\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <div className=\"relative w-64 h-64 mb-6\">\r\n              {!capturedImage ? (\r\n                <Webcam\r\n                  audio={false}\r\n                  ref={webcamRef}\r\n                  screenshotFormat=\"image/jpeg\"\r\n                  width={256}\r\n                  height={256}\r\n                  videoConstraints={{ facingMode: 'user' }}\r\n                  className=\"w-full h-full object-cover rounded-2xl border-4 border-transparent hover:border-blue-500 transition-all duration-300 shadow-lg\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={capturedImage}\r\n                  alt=\"Captured Face\"\r\n                  className=\"w-full h-full object-cover rounded-2xl border-4 border-blue-500 shadow-lg\"\r\n                />\r\n              )}\r\n              {isScanning && !capturedImage && (\r\n                <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                  <div className=\"scan-line\"></div>\r\n                </div>\r\n              )}\r\n              <div className=\"absolute inset-0 rounded-2xl shadow-[0_0_20px_rgba(59,130,246,0.5)] opacity-0 hover:opacity-100 transition-opacity duration-300 pointer-events-none\"></div>\r\n            </div>\r\n            <button\r\n              onClick={handleFaceRecognition}\r\n              className=\"relative w-64 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-bold py-3 rounded-xl hover:scale-105 hover:shadow-xl transition-all duration-300 shadow-md flex items-center justify-center\"\r\n            >\r\n              <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 12h18M3 6h18M3 18h18M9 6v12M15 6v12\"></path>\r\n              </svg>\r\n              Face Detector\r\n            </button>\r\n            <button\r\n              onClick={handleTrainModel}\r\n              className=\"relative w-64 bg-gradient-to-r from-green-600 to-teal-600 text-white font-bold py-3 rounded-xl hover:scale-105 hover:shadow-xl transition-all duration-300 shadow-md flex items-center justify-center mt-4\"\r\n            >\r\n              <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"></path>\r\n              </svg>\r\n              Train Model\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <style>\r\n        {`\r\n          @keyframes float {\r\n            0%, 100% { transform: translateY(0); }\r\n            50% { transform: translateY(-10px); }\r\n          }\r\n          @keyframes scan {\r\n            0% { transform: translateY(-100%); }\r\n            100% { transform: translateY(100%); }\r\n          }\r\n          .particle {\r\n            position: absolute;\r\n            width: 4px;\r\n            height: 4px;\r\n            background: rgba(59, 130, 246, 0.7);\r\n            border-radius: 50%;\r\n            animation: float 5s infinite ease-in-out;\r\n            box-shadow: 0 0 10px rgba(59, 130, 246, 0.5);\r\n          }\r\n          .scan-line {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 2px;\r\n            background: linear-gradient(to right, transparent, #3b82f6, transparent);\r\n            animation: scan 1s infinite linear;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceDetector;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAC/C,MAAO,CAAAC,MAAM,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAa,IAAZ,CAAEC,MAAO,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACY,aAAa,CAAEC,gBAAgB,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAAAc,SAAS,CAAGb,MAAM,CAAC,IAAI,CAAC,CAE9B,KAAM,CAAAc,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,QAAQ,CAAGF,SAAS,CAACG,OAAO,CAACC,aAAa,CAAC,CAAC,CAClD,GAAIF,QAAQ,CAAE,CACZH,gBAAgB,CAACG,QAAQ,CAAC,CAC1B,MAAO,CAAAA,QAAQ,CACjB,CAAC,IAAM,CACLG,KAAK,CAAC,kEAAkE,CAAC,CACzE,MAAO,KAAI,CACb,CACF,CAAC,CAED,KAAM,CAAAC,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CACxCT,aAAa,CAAC,IAAI,CAAC,CACnB,GAAI,CACF;AACA,KAAM,CAAAU,KAAK,CAAC,yCAAyC,CAAE,CACrDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CAEF;AACA,KAAM,CAAAP,QAAQ,CAAGD,YAAY,CAAC,CAAC,CAC/B,GAAI,CAACC,QAAQ,CAAE,CACbL,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA;AACA,KAAM,CAAAa,QAAQ,CAAG,KAAM,CAAAH,KAAK,CAAC,0CAA0C,CAAE,CACvEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CE,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,KAAK,CAAEZ,QAAS,CAAC,CAC1C,CAAC,CAAC,CACF,KAAM,CAAAa,eAAe,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAE7C,GAAID,eAAe,CAACE,MAAM,GAAK,GAAG,CAAE,CAClC,GAAIF,eAAe,CAACG,OAAO,CAACC,QAAQ,CAAC,mBAAmB,CAAC,CAAE,CACzDd,KAAK,CAAC,qEAAqE,CAAC,CAC9E,CAAC,IAAM,IAAIU,eAAe,CAACG,OAAO,CAACC,QAAQ,CAAC,aAAa,CAAC,CAAE,CAC1Dd,KAAK,CAAC,sEAAsE,CAAC,CAC/E,CAAC,IAAM,CACLA,KAAK,CAACU,eAAe,CAACG,OAAO,EAAI,0BAA0B,CAAC,CAC9D,CACArB,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA,KAAM,CAAAuB,SAAS,CAAGL,eAAe,CAACM,UAAU,CAC5C,GAAI,CAACD,SAAS,CAAE,CACdf,KAAK,CAAC,qBAAqB,CAAC,CAC5BR,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA;AACA,KAAM,CAAAyB,kBAAkB,CAAG,KAAM,CAAAf,KAAK,CAAC,2CAA2C,CAAE,CAClFC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CE,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEQ,UAAU,CAAED,SAAU,CAAC,CAChD,CAAC,CAAC,CACF,KAAM,CAAAG,cAAc,CAAG,KAAM,CAAAD,kBAAkB,CAACN,IAAI,CAAC,CAAC,CACtDX,KAAK,CAACkB,cAAc,CAACL,OAAO,CAAC,CAE7B,GAAIK,cAAc,CAACN,MAAM,GAAK,GAAG,EAAIM,cAAc,CAACC,OAAO,CAAE,CAC3D,KAAM,CAAEC,EAAE,CAAEC,IAAI,CAAEC,IAAI,CAAEC,UAAW,CAAC,CAAGL,cAAc,CAACC,OAAO,CAC7DnB,KAAK,CAAC,4BAA4BoB,EAAE,WAAWC,IAAI,WAAWC,IAAI,iBAAiBC,UAAU,EAAE,CAAC,CAClG,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtDxB,KAAK,CAAC,6GAA6G,CAAC,CACtH,CAAC,OAAS,CACR0B,UAAU,CAAC,IAAMlC,aAAa,CAAC,KAAK,CAAC,CAAE,IAAI,CAAC,CAC9C,CACF,CAAC,CAED,KAAM,CAAAmC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAH,KAAK,CAAC,iCAAiC,CAAE,CAC9DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CACF,KAAM,CAAAwB,IAAI,CAAG,KAAM,CAAAvB,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCX,KAAK,CAAC4B,IAAI,CAACf,OAAO,CAAC,CACrB,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7CxB,KAAK,CAAC,8DAA8D,CAAC,CACvE,CACF,CAAC,CAED,mBACEb,KAAA,QACE0C,SAAS,CAAC,uCAAuC,CACjDC,KAAK,CAAE,CACLC,eAAe,CAAE,qBAAqB,CACtCC,cAAc,CAAE,OAAO,CACvBC,kBAAkB,CAAE,QAAQ,CAC5BC,gBAAgB,CAAE,WACpB,CAAE,CAAAC,QAAA,eAEFlD,IAAA,QAAK4C,SAAS,CAAC,yCAAyC,CAAM,CAAC,cAC/D5C,IAAA,QAAK4C,SAAS,CAAC,sDAAsD,CAAAM,QAAA,CAClE,CAAC,GAAGC,KAAK,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,CAAEC,CAAC,gBACvBtD,IAAA,QAEE4C,SAAS,CAAC,UAAU,CACpBC,KAAK,CAAE,CACLU,IAAI,CAAE,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,GAAG,CAC/BC,GAAG,CAAE,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,GAAG,CAC9BE,cAAc,CAAE,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,CAAC,GACtC,CAAE,EANGH,CAOD,CACP,CAAC,CACC,CAAC,cACNpD,KAAA,QAAK0C,SAAS,CAAC,eAAe,CAAAM,QAAA,eAC5BhD,KAAA,QAAK0C,SAAS,CAAC,uHAAuH,CAAAM,QAAA,eACpIhD,KAAA,WAAQ0D,OAAO,CAAEvD,MAAO,CAACuC,SAAS,CAAC,0HAA0H,CAAAM,QAAA,eAC3JlD,IAAA,QAAK4C,SAAS,CAAC,cAAc,CAACiB,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAd,QAAA,cACpHlD,IAAA,SAAMiE,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,iBAAiB,CAAO,CAAC,CAC3F,CAAC,YAER,EAAQ,CAAC,cACTpE,IAAA,OAAI4C,SAAS,CAAC,6IAA6I,CAAAM,QAAA,CAAC,mCAE5J,CAAI,CAAC,cACLlD,IAAA,QAAK4C,SAAS,CAAC,WAAW,CAAM,CAAC,EAC9B,CAAC,cACN5C,IAAA,QAAK4C,SAAS,CAAC,8BAA8B,CAAAM,QAAA,cAC3ClD,IAAA,QAAK4C,SAAS,CAAC,kFAAkF,CAAM,CAAC,CACrG,CAAC,cACN5C,IAAA,QAAK4C,SAAS,CAAC,iEAAiE,CAAAM,QAAA,cAC9EhD,KAAA,QAAK0C,SAAS,CAAC,4BAA4B,CAAAM,QAAA,eACzChD,KAAA,QAAK0C,SAAS,CAAC,yBAAyB,CAAAM,QAAA,EACrC,CAAC1C,aAAa,cACbR,IAAA,CAACF,MAAM,EACLuE,KAAK,CAAE,KAAM,CACbC,GAAG,CAAE5D,SAAU,CACf6D,gBAAgB,CAAC,YAAY,CAC7BC,KAAK,CAAE,GAAI,CACXC,MAAM,CAAE,GAAI,CACZC,gBAAgB,CAAE,CAAEC,UAAU,CAAE,MAAO,CAAE,CACzC/B,SAAS,CAAC,gIAAgI,CAC3I,CAAC,cAEF5C,IAAA,QACE4E,GAAG,CAAEpE,aAAc,CACnBqE,GAAG,CAAC,eAAe,CACnBjC,SAAS,CAAC,2EAA2E,CACtF,CACF,CACAtC,UAAU,EAAI,CAACE,aAAa,eAC3BR,IAAA,QAAK4C,SAAS,CAAC,mDAAmD,CAAAM,QAAA,cAChElD,IAAA,QAAK4C,SAAS,CAAC,WAAW,CAAM,CAAC,CAC9B,CACN,cACD5C,IAAA,QAAK4C,SAAS,CAAC,qJAAqJ,CAAM,CAAC,EACxK,CAAC,cACN1C,KAAA,WACE0D,OAAO,CAAE5C,qBAAsB,CAC/B4B,SAAS,CAAC,wMAAwM,CAAAM,QAAA,eAElNlD,IAAA,QAAK4C,SAAS,CAAC,cAAc,CAACiB,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAd,QAAA,cACpHlD,IAAA,SAAMiE,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,wCAAwC,CAAO,CAAC,CAClH,CAAC,gBAER,EAAQ,CAAC,cACTlE,KAAA,WACE0D,OAAO,CAAElB,gBAAiB,CAC1BE,SAAS,CAAC,4MAA4M,CAAAM,QAAA,eAEtNlD,IAAA,QAAK4C,SAAS,CAAC,cAAc,CAACiB,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAd,QAAA,cACpHlD,IAAA,SAAMiE,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,gEAAgE,CAAO,CAAC,CAC1I,CAAC,cAER,EAAQ,CAAC,EACN,CAAC,CACH,CAAC,EACH,CAAC,cACNpE,IAAA,UAAAkD,QAAA,CACG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,CACI,CAAC,EACL,CAAC,CAEV,CAEA,cAAe,CAAA/C,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}