{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anshu\\\\attendance-management-system\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showForgetModal, setShowForgetModal] = useState(false);\n  const [securityQuestion, setSecurityQuestion] = useState('Select');\n  const [securityAnswer, setSecurityAnswer] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleLogin = async () => {\n    if (!username || !password) {\n      setMessage('All Fields Required!');\n      return;\n    }\n    if (username === 'admin' && password === 'admin') {\n      setMessage('Welcome to Attendance Management System Using Facial Recognition');\n      // Set admin credentials in localStorage\n      localStorage.setItem('username', 'Admin User');\n      localStorage.setItem('email', 'admin@example.com');\n      localStorage.setItem('password', 'admin');\n      localStorage.setItem('loggedIn', 'true');\n      window.dispatchEvent(new Event('storageChange'));\n      navigate('/');\n      return;\n    }\n    try {\n      // Step 1: Authenticate the user with email and password\n      const loginResponse = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: username,\n          password\n        })\n      });\n      const loginResult = await loginResponse.json();\n\n      // Debug: Log the login API response\n      console.log('Login API Response:', loginResult);\n      if (loginResponse.ok) {\n        // Step 2: Check if username is already in localStorage\n        let displayName = localStorage.getItem('username');\n        let email = loginResult.email || username;\n        let pwd = loginResult.password || loginResult.pwd || loginResult.pass;\n\n        // Step 3: If username is not in localStorage, fetch user data\n        if (!displayName) {\n          const userResponse = await fetch(`http://localhost:5000/api/user?email=${encodeURIComponent(email)}`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          const userResult = await userResponse.json();\n\n          // Debug: Log the user API response\n          console.log('User API Response:', userResult);\n          if (userResponse.ok) {\n            var _userResult$name, _userResult$name2;\n            const fname = userResult.first_name || userResult.fname || userResult.firstName || userResult.given_name || ((_userResult$name = userResult.name) === null || _userResult$name === void 0 ? void 0 : _userResult$name.split(' ')[0]) || '';\n            const lname = userResult.last_name || userResult.lname || userResult.lastName || userResult.family_name || ((_userResult$name2 = userResult.name) === null || _userResult$name2 === void 0 ? void 0 : _userResult$name2.split(' ')[1]) || '';\n            displayName = fname ? `${fname} ${lname}`.trim() : email.split('@')[0].replace(/[^a-zA-Z\\s]/g, ' ').trim() || 'User';\n          } else {\n            // Fallback to email-derived name if user fetch fails\n            displayName = email.split('@')[0].replace(/[^a-zA-Z\\s]/g, ' ').trim() || 'User';\n          }\n        }\n\n        // Step 4: Store credentials in localStorage\n        localStorage.setItem('username', displayName);\n        localStorage.setItem('email', email);\n        localStorage.setItem('password', pwd);\n        localStorage.setItem('loggedIn', 'true');\n\n        // Debug: Log the values being stored in localStorage\n        console.log('Storing in localStorage:', {\n          username: displayName,\n          email: email,\n          password: pwd\n        });\n        window.dispatchEvent(new Event('storageChange'));\n        setMessage('Login Successful\\nATTEND');\n        navigate('/');\n      } else {\n        setMessage(loginResult.message || 'Invalid Username or Password!');\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  };\n  const handleRegister = () => {\n    navigate('/register');\n  };\n  const handleForgetPassword = async () => {\n    if (!username) {\n      setMessage('Please Enter the Email ID to reset Password!');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/check-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: username\n        })\n      });\n      const result = await response.json();\n      if (response.ok && result.exists) {\n        setShowForgetModal(true);\n      } else {\n        setMessage('Please Enter the Valid Email ID!');\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  };\n  const handleResetPassword = async () => {\n    if (securityQuestion === 'Select') {\n      setMessage('Select the Security Question!');\n      return;\n    }\n    if (!securityAnswer) {\n      setMessage('Please Enter the Answer!');\n      return;\n    }\n    if (!newPassword) {\n      setMessage('Please Enter the New Password!');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: username,\n          securityQuestion,\n          securityAnswer,\n          newPassword\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        // Update password in localStorage\n        localStorage.setItem('password', newPassword);\n        setMessage('Successfully Your password has been reset, Please login with new Password!');\n        setShowForgetModal(false);\n        setSecurityQuestion('Select');\n        setSecurityAnswer('');\n        setNewPassword('');\n      } else {\n        setMessage('Please Enter the Correct Answer!');\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleLogin();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/login.jpg\",\n      alt: \"Background\",\n      className: \"absolute inset-0 w-full h-full object-cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-[#002B53] w-[340px] h-[450px] p-4 rounded shadow-lg flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/log1.png\",\n          alt: \"Login Icon\",\n          className: \"w-[100px] h-[100px]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center text-white text-2xl font-bold mt-2\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 text-center text-white bg-red-500 p-2 rounded text-sm\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-white font-bold\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            onKeyPress: handleKeyPress,\n            className: \"w-full mt-1 p-2 rounded border border-gray-300\",\n            style: {\n              fontFamily: 'Times New Roman',\n              fontSize: '15px',\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-white font-bold\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'text' : 'password',\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            onKeyPress: handleKeyPress,\n            className: \"w-full mt-1 p-2 rounded border border-gray-300\",\n            style: {\n              fontFamily: 'Times New Roman',\n              fontSize: '15px',\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: togglePassword,\n            className: \"absolute right-2 top-9 cursor-pointer text-lg\",\n            children: showPassword ? '👁‍🗨' : '👁'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          className: \"w-full bg-white text-[#002B53] font-bold py-2 rounded hover:bg-[#007ACC] hover:text-white\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRegister,\n            className: \"text-white font-bold hover:text-orange-500\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleForgetPassword,\n            className: \"text-white font-bold hover:text-orange-500\",\n            children: \"Forget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), showForgetModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded shadow-lg w-[400px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center text-[#002B53] text-2xl font-bold\",\n          children: \"Forget Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-[#002B53] font-bold\",\n            children: \"Select Security Question:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: securityQuestion,\n            onChange: e => setSecurityQuestion(e.target.value),\n            className: \"w-full mt-1 p-2 rounded border border-gray-300\",\n            style: {\n              fontFamily: 'Times New Roman',\n              fontSize: '15px',\n              fontWeight: 'bold'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Your Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Your Nick Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Your Favorite Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-[#002B53] font-bold\",\n            children: \"Security Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: securityAnswer,\n            onChange: e => setSecurityAnswer(e.target.value),\n            className: \"w-full mt-1 p-2 rounded border border-gray-300\",\n            style: {\n              fontFamily: 'Times New Roman',\n              fontSize: '15px',\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-[#002B53] font-bold\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            className: \"w-full mt-1 p-2 rounded border border-gray-300\",\n            style: {\n              fontFamily: 'Times New Roman',\n              fontSize: '15px',\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetPassword,\n            className: \"w-full bg-[#002B53] text-white font-bold py-2 rounded hover:bg-[#007ACC]\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowForgetModal(false),\n            className: \"text-[#002B53] font-bold hover:text-red-500\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"2zlTplSnuA3uyCJdCoprLg8TSYQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","username","setUsername","password","setPassword","showPassword","setShowPassword","showForgetModal","setShowForgetModal","securityQuestion","setSecurityQuestion","securityAnswer","setSecurityAnswer","newPassword","setNewPassword","message","setMessage","togglePassword","handleLogin","localStorage","setItem","window","dispatchEvent","Event","loginResponse","fetch","method","headers","body","JSON","stringify","email","loginResult","json","console","log","ok","displayName","getItem","pwd","pass","userResponse","encodeURIComponent","userResult","_userResult$name","_userResult$name2","fname","first_name","firstName","given_name","name","split","lname","last_name","lastName","family_name","trim","replace","error","handleRegister","handleForgetPassword","response","result","exists","handleResetPassword","handleKeyPress","e","key","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyPress","style","fontFamily","fontSize","fontWeight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anshu/attendance-management-system/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showForgetModal, setShowForgetModal] = useState(false);\r\n  const [securityQuestion, setSecurityQuestion] = useState('Select');\r\n  const [securityAnswer, setSecurityAnswer] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const togglePassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!username || !password) {\r\n      setMessage('All Fields Required!');\r\n      return;\r\n    }\r\n\r\n    if (username === 'admin' && password === 'admin') {\r\n      setMessage('Welcome to Attendance Management System Using Facial Recognition');\r\n      // Set admin credentials in localStorage\r\n      localStorage.setItem('username', 'Admin User');\r\n      localStorage.setItem('email', 'admin@example.com');\r\n      localStorage.setItem('password', 'admin');\r\n      localStorage.setItem('loggedIn', 'true');\r\n      window.dispatchEvent(new Event('storageChange'));\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Step 1: Authenticate the user with email and password\r\n      const loginResponse = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: username, password }),\r\n      });\r\n\r\n      const loginResult = await loginResponse.json();\r\n\r\n      // Debug: Log the login API response\r\n      console.log('Login API Response:', loginResult);\r\n\r\n      if (loginResponse.ok) {\r\n        // Step 2: Check if username is already in localStorage\r\n        let displayName = localStorage.getItem('username');\r\n        let email = loginResult.email || username;\r\n        let pwd = loginResult.password || loginResult.pwd || loginResult.pass;\r\n\r\n        // Step 3: If username is not in localStorage, fetch user data\r\n        if (!displayName) {\r\n          const userResponse = await fetch(`http://localhost:5000/api/user?email=${encodeURIComponent(email)}`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n\r\n          const userResult = await userResponse.json();\r\n\r\n          // Debug: Log the user API response\r\n          console.log('User API Response:', userResult);\r\n\r\n          if (userResponse.ok) {\r\n            const fname = userResult.first_name || userResult.fname || userResult.firstName || userResult.given_name || userResult.name?.split(' ')[0] || '';\r\n            const lname = userResult.last_name || userResult.lname || userResult.lastName || userResult.family_name || userResult.name?.split(' ')[1] || '';\r\n            displayName = fname ? `${fname} ${lname}`.trim() : email.split('@')[0].replace(/[^a-zA-Z\\s]/g, ' ').trim() || 'User';\r\n          } else {\r\n            // Fallback to email-derived name if user fetch fails\r\n            displayName = email.split('@')[0].replace(/[^a-zA-Z\\s]/g, ' ').trim() || 'User';\r\n          }\r\n        }\r\n\r\n        // Step 4: Store credentials in localStorage\r\n        localStorage.setItem('username', displayName);\r\n        localStorage.setItem('email', email);\r\n        localStorage.setItem('password', pwd);\r\n        localStorage.setItem('loggedIn', 'true');\r\n\r\n        // Debug: Log the values being stored in localStorage\r\n        console.log('Storing in localStorage:', {\r\n          username: displayName,\r\n          email: email,\r\n          password: pwd,\r\n        });\r\n\r\n        window.dispatchEvent(new Event('storageChange'));\r\n        setMessage('Login Successful\\nATTEND');\r\n        navigate('/');\r\n      } else {\r\n        setMessage(loginResult.message || 'Invalid Username or Password!');\r\n      }\r\n    } catch (error) {\r\n      setMessage(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    navigate('/register');\r\n  };\r\n\r\n  const handleForgetPassword = async () => {\r\n    if (!username) {\r\n      setMessage('Please Enter the Email ID to reset Password!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/check-email', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: username }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok && result.exists) {\r\n        setShowForgetModal(true);\r\n      } else {\r\n        setMessage('Please Enter the Valid Email ID!');\r\n      }\r\n    } catch (error) {\r\n      setMessage(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    if (securityQuestion === 'Select') {\r\n      setMessage('Select the Security Question!');\r\n      return;\r\n    }\r\n    if (!securityAnswer) {\r\n      setMessage('Please Enter the Answer!');\r\n      return;\r\n    }\r\n    if (!newPassword) {\r\n      setMessage('Please Enter the New Password!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/reset-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email: username,\r\n          securityQuestion,\r\n          securityAnswer,\r\n          newPassword,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Update password in localStorage\r\n        localStorage.setItem('password', newPassword);\r\n        setMessage('Successfully Your password has been reset, Please login with new Password!');\r\n        setShowForgetModal(false);\r\n        setSecurityQuestion('Select');\r\n        setSecurityAnswer('');\r\n        setNewPassword('');\r\n      } else {\r\n        setMessage('Please Enter the Correct Answer!');\r\n      }\r\n    } catch (error) {\r\n      setMessage(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleLogin();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 relative\">\r\n      {/* Background Image */}\r\n      <img src=\"/images/login.jpg\" alt=\"Background\" className=\"absolute inset-0 w-full h-full object-cover\" />\r\n\r\n      {/* Login Frame */}\r\n      <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-[#002B53] w-[340px] h-[450px] p-4 rounded shadow-lg flex flex-col\">\r\n        {/* Header Image */}\r\n        <div className=\"flex justify-center\">\r\n          <img src=\"/images/log1.png\" alt=\"Login Icon\" className=\"w-[100px] h-[100px]\" />\r\n        </div>\r\n\r\n        {/* Title */}\r\n        <h1 className=\"text-center text-white text-2xl font-bold mt-2\">Login</h1>\r\n\r\n        {/* Message Display */}\r\n        {message && (\r\n          <div className=\"mt-2 text-center text-white bg-red-500 p-2 rounded text-sm\">\r\n            {message}\r\n          </div>\r\n        )}\r\n\r\n        {/* Form Fields */}\r\n        <div className=\"flex-1 mt-4\">\r\n          {/* Username Field */}\r\n          <div>\r\n            <label className=\"text-white font-bold\">Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              className=\"w-full mt-1 p-2 rounded border border-gray-300\"\r\n              style={{ fontFamily: 'Times New Roman', fontSize: '15px', fontWeight: 'bold' }}\r\n            />\r\n          </div>\r\n\r\n          {/* Password Field */}\r\n          <div className=\"mt-4 relative\">\r\n            <label className=\"text-white font-bold\">Password:</label>\r\n            <input\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              className=\"w-full mt-1 p-2 rounded border border-gray-300\"\r\n              style={{ fontFamily: 'Times New Roman', fontSize: '15px', fontWeight: 'bold' }}\r\n            />\r\n            <span\r\n              onClick={togglePassword}\r\n              className=\"absolute right-2 top-9 cursor-pointer text-lg\"\r\n            >\r\n              {showPassword ? '👁‍🗨' : '👁'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Buttons */}\r\n        <div className=\"mt-6\">\r\n          <button\r\n            onClick={handleLogin}\r\n            className=\"w-full bg-white text-[#002B53] font-bold py-2 rounded hover:bg-[#007ACC] hover:text-white\"\r\n          >\r\n            Login\r\n          </button>\r\n          <div className=\"mt-4 flex justify-between\">\r\n            <button\r\n              onClick={handleRegister}\r\n              className=\"text-white font-bold hover:text-orange-500\"\r\n            >\r\n              Register\r\n            </button>\r\n            <button\r\n              onClick={handleForgetPassword}\r\n              className=\"text-white font-bold hover:text-orange-500\"\r\n            >\r\n              Forget\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Forget Password Modal */}\r\n      {showForgetModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white p-6 rounded shadow-lg w-[400px]\">\r\n            <h2 className=\"text-center text-[#002B53] text-2xl font-bold\">Forget Password</h2>\r\n\r\n            {/* Security Question */}\r\n            <div className=\"mt-4\">\r\n              <label className=\"text-[#002B53] font-bold\">Select Security Question:</label>\r\n              <select\r\n                value={securityQuestion}\r\n                onChange={(e) => setSecurityQuestion(e.target.value)}\r\n                className=\"w-full mt-1 p-2 rounded border border-gray-300\"\r\n                style={{ fontFamily: 'Times New Roman', fontSize: '15px', fontWeight: 'bold' }}\r\n              >\r\n                <option>Select</option>\r\n                <option>Your Date of Birth</option>\r\n                <option>Your Nick Name</option>\r\n                <option>Your Favorite Book</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Security Answer */}\r\n            <div className=\"mt-4\">\r\n              <label className=\"text-[#002B53] font-bold\">Security Answer:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={securityAnswer}\r\n                onChange={(e) => setSecurityAnswer(e.target.value)}\r\n                className=\"w-full mt-1 p-2 rounded border border-gray-300\"\r\n                style={{ fontFamily: 'Times New Roman', fontSize: '15px', fontWeight: 'bold' }}\r\n              />\r\n            </div>\r\n\r\n            {/* New Password */}\r\n            <div className=\"mt-4\">\r\n              <label className=\"text-[#002B53] font-bold\">New Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                className=\"w-full mt-1 p-2 rounded border border-gray-300\"\r\n                style={{ fontFamily: 'Times New Roman', fontSize: '15px', fontWeight: 'bold' }}\r\n              />\r\n            </div>\r\n\r\n            {/* Reset Password Button */}\r\n            <div className=\"mt-6\">\r\n              <button\r\n                onClick={handleResetPassword}\r\n                className=\"w-full bg-[#002B53] text-white font-bold py-2 rounded hover:bg-[#007ACC]\"\r\n              >\r\n                Reset Password\r\n              </button>\r\n            </div>\r\n\r\n            {/* Close Modal Button */}\r\n            <div className=\"mt-4 text-center\">\r\n              <button\r\n                onClick={() => setShowForgetModal(false)}\r\n                className=\"text-[#002B53] font-bold hover:text-red-500\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}