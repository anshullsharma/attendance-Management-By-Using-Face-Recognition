{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anshu\\\\attendance-management-system\\\\frontend\\\\src\\\\components\\\\LoadingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadingScreen() {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Redirect to the main page after the GIF duration (e.g., 3 seconds)\n    const timer = setTimeout(() => {\n      navigate('/');\n    }, 6000); // Adjust this duration based on the actual GIF duration\n\n    return () => clearTimeout(timer); // Cleanup the timer on component unmount\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/f_det1.gif\",\n      alt: \"Loading Animation\",\n      className: \"w-64 h-64 object-contain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(LoadingScreen, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LoadingScreen;\nexport default LoadingScreen;\nvar _c;\n$RefreshReg$(_c, \"LoadingScreen\");","map":{"version":3,"names":["React","useEffect","useNavigate","jsxDEV","_jsxDEV","LoadingScreen","_s","navigate","timer","setTimeout","clearTimeout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anshu/attendance-management-system/frontend/src/components/LoadingScreen.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoadingScreen() {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Redirect to the main page after the GIF duration (e.g., 3 seconds)\r\n    const timer = setTimeout(() => {\r\n      navigate('/');\r\n    }, 6000); // Adjust this duration based on the actual GIF duration\r\n\r\n    return () => clearTimeout(timer); // Cleanup the timer on component unmount\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n      <img\r\n        src=\"/images/f_det1.gif\"\r\n        alt=\"Loading Animation\"\r\n        className=\"w-64 h-64 object-contain\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;EACpC,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAKO,SAAS,EAAC,2DAA2D;IAAAC,QAAA,eACxER,OAAA;MACES,GAAG,EAAC,oBAAoB;MACxBC,GAAG,EAAC,mBAAmB;MACvBH,SAAS,EAAC;IAA0B;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACZ,EAAA,CArBQD,aAAa;EAAA,QACHH,WAAW;AAAA;AAAAiB,EAAA,GADrBd,aAAa;AAuBtB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}